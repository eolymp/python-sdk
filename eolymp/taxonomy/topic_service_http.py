# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-python-esdk for more details.
"""Generated protocol buffer code."""

import urllib.parse
from google.protobuf import symbol_database as _symbol_database

_sym_db = _symbol_database.Default()


class TopicServiceClient:
    def __init__(self, transport, url="https://api.eolymp.com"):
        self.transport = transport
        self.url = url

    def CreateTopic(self, request, **kwargs):
        path = "/topics"

        return self.transport.request(
            method="POST",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.CreateTopicOutput"),
            **kwargs,
        )

    def DeleteTopic(self, request, **kwargs):
        path = "/topics/"+urllib.parse.quote(request.topic_id)

        # Cleanup URL parameters to avoid any ambiguity
        request.topic_id = ""

        return self.transport.request(
            method="DELETE",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.DeleteTopicOutput"),
            **kwargs,
        )

    def UpdateTopic(self, request, **kwargs):
        path = "/topics/"+urllib.parse.quote(request.topic_id)

        # Cleanup URL parameters to avoid any ambiguity
        request.topic_id = ""

        return self.transport.request(
            method="PUT",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.UpdateTopicOutput"),
            **kwargs,
        )

    def DescribeTopic(self, request, **kwargs):
        path = "/topics/"+urllib.parse.quote(request.topic_id)

        # Cleanup URL parameters to avoid any ambiguity
        request.topic_id = ""

        return self.transport.request(
            method="GET",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.DescribeTopicOutput"),
            **kwargs,
        )

    def ListTopics(self, request, **kwargs):
        path = "/topics"

        return self.transport.request(
            method="GET",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.ListTopicsOutput"),
            **kwargs,
        )

    def TranslateTopic(self, request, **kwargs):
        path = "/topics/"+urllib.parse.quote(request.topic_id)+"/translations/"+urllib.parse.quote(request.locale)

        # Cleanup URL parameters to avoid any ambiguity
        request.topic_id = ""
        request.locale = ""

        return self.transport.request(
            method="PUT",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.TranslateTopicOutput"),
            **kwargs,
        )

    def DeleteTranslation(self, request, **kwargs):
        path = "/topics/"+urllib.parse.quote(request.topic_id)+"/translations/"+urllib.parse.quote(request.locale)

        # Cleanup URL parameters to avoid any ambiguity
        request.topic_id = ""
        request.locale = ""

        return self.transport.request(
            method="DELETE",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.DeleteTranslationOutput"),
            **kwargs,
        )

    def ListTranslations(self, request, **kwargs):
        path = "/topics/"+urllib.parse.quote(request.topic_id)+"/translations"

        # Cleanup URL parameters to avoid any ambiguity
        request.topic_id = ""

        return self.transport.request(
            method="DELETE",
            url=self.url+path,
            request_data=request,
            response_symbol=_sym_db.GetSymbol("eolymp.taxonomy.ListTranslationsOutput"),
            **kwargs,
        )

